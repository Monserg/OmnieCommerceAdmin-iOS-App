//
//  SlideMenuShowViewController.swift
//  OmnieCommerceAdmin
//
//  Created by msm72 on 13.02.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current ViewController component VIP-cicle
protocol SlideMenuShowViewControllerInput {
    func didShowData(fromViewModel viewModel: SlideMenuShowModels.DataSource.ViewModel)
}

// MARK: - Output protocols for Interactor component VIP-cicle
protocol SlideMenuShowViewControllerOutput {
    func didLoadData(withRequestModel requestModel: SlideMenuShowModels.DataSource.RequestModel)
}

class SlideMenuShowViewController: BaseViewController {
    // MARK: - Properties
    var interactor: SlideMenuShowViewControllerOutput!
    var router: SlideMenuShowRouter!
    
    var items = SlideMenu.Items()
//    let managerTVC = ManagerTableViewController()
    
    @IBOutlet weak var tableView: UITableView! {
        didSet {
            tableView.delegate = self
            tableView.dataSource = self
//            tableView.delegate = managerTVC
//            tableView.dataSource = managerTVC
        }
    }

    
    // MARK: - Class initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        SlideMenuShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        doInitialSetupOnLoad()
    }
    

    // MARK: - Custom Functions
    func doInitialSetupOnLoad() {
        view.backgroundColor = UIColor.init(hexString: "#262626", withAlpha: 1.0)

        // Create data source
        items = SlideMenu.Items.init()
//        interactor.didLoadData(withRequestModel: SlideMenuShowModels.DataSource.RequestModel())
        
        // NOTE: Ask the Interactor to do some work
    }
}


// MARK: - SlideMenuShowViewControllerInput
extension SlideMenuShowViewController: SlideMenuShowViewControllerInput {
    func didShowData(fromViewModel viewModel: SlideMenuShowModels.DataSource.ViewModel) {
//        managerTVC.dataSource = (viewModel.dataSource?.sections)!
        
        tableView.reloadData()
    }
}


// MARK: - UITableViewDataSource
extension SlideMenuShowViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return items.sections.count
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return items.sections[section].count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cellIdentifier = "MenuCell"
        let cell = tableView.dequeueReusableCell(withIdentifier: cellIdentifier) as! MenuViewCell
        
        cell.didSetup(fromItem: items.sections[indexPath.section][indexPath.row])
        
        return cell
    }
}


// MARK: - UITableViewDelegate
extension SlideMenuShowViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 35.0
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return CGFloat.leastNormalMagnitude
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 25.0
    }
    
    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {
        let footerView = UIView.init(frame: CGRect.init(origin: CGPoint.zero, size: CGSize.init(width: tableView.frame.width, height: 25.0)))
        footerView.backgroundColor = UIColor.clear
        
        if (section != items.sections.count - 1) {
            let lineView = UIView.init(frame: CGRect.init(origin: CGPoint.init(x: 0, y: 25.0 / 2), size: CGSize.init(width: tableView.frame.width, height: 1.0)))
            lineView.backgroundColor = UIColor.init(hexString: "#3b3b3b", withAlpha: 1.0)
            
            footerView.addSubview(lineView)
        }
        
        return footerView
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let cell = tableView.cellForRow(at: indexPath) as! MenuViewCell

        if (cell.storyboardName == "SignOut") {
            Config.Constants.isUserGuest = true
            
            dismiss(animated: true, completion: nil)
        } else {
            let initNC = UIStoryboard(name: cell.storyboardName, bundle: nil).instantiateViewController(withIdentifier: cell.storyboardName + "NC") as! UINavigationController
        
            revealViewController().pushFrontViewController(initNC, animated: true)
        }
            
        tableView.deselectRow(at: indexPath, animated: true)
    }
}
