//
//  SlideMenuShowViewController.swift
//  OmnieCommerceAdmin
//
//  Created by msm72 on 13.02.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input protocols for current ViewController component VIP-cicle
protocol SlideMenuShowViewControllerInput {
    func displaySomething(viewModel: SlideMenuShowModels.Something.ViewModel)
}

// MARK: - Output protocols for Interactor component VIP-cicle
protocol SlideMenuShowViewControllerOutput {
    func doSomething(requestModel: SlideMenuShowModels.Something.RequestModel)
}

class SlideMenuShowViewController: UIViewController {
    // MARK: - Properties
    var interactor: SlideMenuShowViewControllerOutput!
    var router: SlideMenuShowRouter!
    
    var items = SlideMenu.Items()
    
    @IBOutlet weak var tableView: UITableView! {
        didSet {
            tableView.delegate = self
            tableView.dataSource = self
        }
    }

    
    // MARK: - Class initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        SlideMenuShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        doInitialSetupOnLoad()
    }
    

    // MARK: - Custom Functions
    func doInitialSetupOnLoad() {
        view.backgroundColor = UIColor.init(hexString: "#262626", withAlpha: 1.0)

        // Create data source
        items = SlideMenu.Items.init()
        
        
        // NOTE: Ask the Interactor to do some work
        let requestModel = SlideMenuShowModels.Something.RequestModel()
        interactor.doSomething(requestModel: requestModel)
    }
}


// MARK: - ForgotPasswordShowViewControllerInput
extension SlideMenuShowViewController: SlideMenuShowViewControllerInput {
    func displaySomething(viewModel: SlideMenuShowModels.Something.ViewModel) {
        // NOTE: Display the result from the Presenter
        // nameTextField.text = viewModel.name
    }
}


// MARK: - UITableViewDataSource
extension SlideMenuShowViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return items.sections.count
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return items.sections[section].count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cellIdentifier = "MenuCell"
        let cell = tableView.dequeueReusableCell(withIdentifier: cellIdentifier) as! MenuViewCell
        
        cell.didSetup(fromItem: items.sections[indexPath.section][indexPath.row])
        
        return cell
    }
}



// MARK: - UITableViewDelegate
extension SlideMenuShowViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 35.0
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return CGFloat.leastNormalMagnitude
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 25.0
    }
    
    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {
        let footerView = UIView.init(frame: CGRect.init(origin: CGPoint.zero, size: CGSize.init(width: tableView.frame.width, height: 25.0)))
        footerView.backgroundColor = UIColor.clear
        
        if (section != items.sections.count - 1) {
            let lineView = UIView.init(frame: CGRect.init(origin: CGPoint.init(x: 0, y: 25.0 / 2), size: CGSize.init(width: tableView.frame.width, height: 1.0)))
            lineView.backgroundColor = UIColor.init(hexString: "#3b3b3b", withAlpha: 1.0)
            
            footerView.addSubview(lineView)
        }
        
        return footerView
    }
    
    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
    
    func tableView(_ tableView: UITableView, didDeselectRowAt indexPath: IndexPath) {
        
    }
}
