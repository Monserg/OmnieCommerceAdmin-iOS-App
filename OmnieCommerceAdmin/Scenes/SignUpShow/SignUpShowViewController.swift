//
//  SignUpShowViewController.swift
//  OmnieCommerceAdmin
//
//  Created by msm72 on 03.02.17.
//  Copyright (c) 2017 Omniesoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Input & Output protocols
protocol SignUpShowViewControllerInput {
    func updateTextField(model: SignUpShowModels.UpdateTextField.ViewModel)

    // DEMO
    func displaySomething(viewModel: SignUpShowModels.Something.ViewModel)
}

protocol SignUpShowViewControllerOutput {
    func updateTextField(request: SignUpShowModels.UpdateTextField.Request)

    // DEMO
    func doSomething(request: SignUpShowModels.Something.Request)
}

class SignUpShowViewController: BaseViewController {
    // MARK: - Properties
    var output: SignUpShowViewControllerOutput!
    var router: SignUpShowRouter!
    var handlerCancelButtonCompletion: HandlerCancelButtonCompletion?
    
    @IBOutlet weak var scrollView: UIScrollView!
    @IBOutlet var textFieldsCollection: [CustomTextField]!
    
    // MARK: - Class initialization
    override func awakeFromNib() {
        super.awakeFromNib()
        
        SignUpShowConfigurator.sharedInstance.configure(viewController: self)
    }
    

    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        doInitialSetupOnLoad()
    }
    

    // MARK: - Custom Functions
    func doInitialSetupOnLoad() {
        // NOTE: Ask the Interactor to do some work
        let request = SignUpShowModels.Something.Request()
        output.doSomething(request: request)
        
        // Delegates
        textFieldsArray = textFieldsCollection
        _ = textFieldsCollection.map{ $0.delegate = self }
        
        // Apply keyboard handler
        scrollViewBase = scrollView

        // Setup App background color theme
        view.applyBackgroundTheme()
    }
    
    // Display logic
    func displaySomething(viewModel: SignUpShowModels.Something.ViewModel) {
        // NOTE: Display the result from the Presenter
        // nameTextField.text = viewModel.name
    }
    
    
    // MARK: - Actions
    @IBAction func handlerRegisterButtonTap(_ sender: CustomButton) {
        router.navigateToAppMainViewController()
    }
    
    @IBAction func handlerCancelButtonTap(_ sender: CustomButton) {
        handlerCancelButtonCompletion!()
    }
}


extension SignUpShowViewController: SignUpShowViewControllerInput {
    func updateTextField(model: SignUpShowModels.UpdateTextField.ViewModel) {
        print(object: "\(type(of: self)): \(#function) run in [line \(#line)]")

//        nameTextField.text = model.text
    }
    
}
